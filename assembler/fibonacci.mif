DEPTH = 128;
WIDTH = 8;
ADDRESS_RADIX = HEX;
DATA_RADIX = BIN;
CONTENT
BEGIN

00        :  00011000;              -- _Start: read A0
01        :  00000000; 
02        :  10011010;              -- load_c A1 1
03        :  00000001; 
04        :  00110010;              -- subtract A1 A0
05        :  00000000; 
06        :  01010010;              -- jmpz A1 _Ret0
07        :  00110010; 
08        :  10011010;              -- load_c A1 2
09        :  00000010; 
0A        :  00110010;              -- subtract A1 A0
0B        :  00000000; 
0C        :  01010010;              -- jmpz A1 _Ret1
0D        :  00110110; 
0E        :  10011010;              -- load_c A1 0
0F        :  00000000; 
10        :  01101000;              -- push A1
11        :  00000001; 
12        :  10011010;              -- load_c A1 1
13        :  00000001; 
14        :  01101000;              -- push A1
15        :  00000001; 
16        :  01110000;              -- _Loop:  pop A2
17        :  00000010; 
18        :  01110000;              -- pop A1
19        :  00000001; 
1A        :  00101010;              -- add A1 A2
1B        :  00000010; 
1C        :  01101000;              -- push A2
1D        :  00000010; 
1E        :  01101000;              -- push A1
1F        :  00000001; 
20        :  01100010;              -- move A1 A3
21        :  00000011; 
22        :  00001010;              -- load A1 _LoopI
23        :  00111100; 
24        :  00110010;              -- subtract A1 A0
25        :  00000000; 
26        :  01010010;              -- jmpz A1 _Write
27        :  00111000; 
28        :  00101010;              -- add A1 A0       ; Restore the value of LoopIndex
29        :  00000000; 
2A        :  10011100;              -- load_c A2 1 
2B        :  00000001; 
2C        :  00101010;              -- add A1 A2       ; Increment LoopIndex
2D        :  00000010; 
2E        :  00010010;              -- store A1 _LoopI ; Store LoopIndex
2F        :  00111100; 
30        :  01001000;              -- jump _Loop      ; Go back
31        :  00010110; 
32        :  10011110;              -- _Ret0:  load_c A3 0
33        :  00000000; 
34        :  01001000;              -- jump _Write
35        :  00111000; 
36        :  10011110;              -- _Ret1:  load_c A3 1
37        :  00000001; 
38        :  00100000;              -- _Write: write A3
39        :  00000011; 
3A        :  00000000;              -- _Stop:  stop
3B        :  00000000; 
3C        :  00000000;              -- .data 2 3
3D        :  00000011; 
[3E..7F]  :  00000000; 
END; 
